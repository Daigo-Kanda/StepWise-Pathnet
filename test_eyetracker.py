import argparse
import datetime
import gc

import tensorflow as tf
from tensorflow import keras

import ITrackerData_person_tensor as data_gen


def main(args):
    model = keras.models.load_model(args.trained_model)

    # generator setting
    # For this test, use validation data
    # data = random_data_gen.getData(batch_size=args.batch_size, memory_size=150, dataset_path=args.dataset_dir)
    data = data_gen.getData(batch_size=args.batch_size, memory_size=150, dataset_path=args.dataset_dir)

    test_generator = data[2]

    now = datetime.datetime.now()

    # callbacks
    # cbks = [keras.callbacks.CSVLogger(
    #     os.path.join(args.save_dir, 'scratch_%s_%s.csv' % ("eye_tracking", now.strftime('%Y%m%d_%H%M%S'))))]

    # Fit the model on the batches generated by datagen.flow().
    history = model.evaluate(
        x=test_generator,
        verbose=1,
    )

    del model
    gc.collect()

    tf.keras.backend.clear_session()

    return history


def get_parser():
    parser = argparse.ArgumentParser()

    # データセットのディレクトリ
    parser.add_argument('dataset_dir')

    # ログの保存先ディレクトリ
    parser.add_argument('save_dir')

    # （テスト用）学習済みモデルの設定
    parser.add_argument('--trained_model', default=None)

    # 画像サイズ
    parser.add_argument('--image_size', type=int, default=224)

    # バッチサイズ
    parser.add_argument('--batch_size', type=int, default=16)

    # エポック
    parser.add_argument('--epochs', type=int, default=60)

    return parser


# 引数の読み込み
if __name__ == '__main__':
    parser = get_parser()

    args = parser.parse_args()

    print('----PARSED ARGS----\n%s\n-----------------' % args)

    main(args)
